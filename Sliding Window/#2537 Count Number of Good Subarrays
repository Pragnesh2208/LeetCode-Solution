/*Solution Using Optimal Appraoch*/
/*Time Complexity = O(N)*/
/*Space Complexity = O(N)*/
class Solution {
public:
    long long countGood(vector<int>& nums, int k) {
        unordered_map<int , int>mp;
        int n = nums.size();
        long long ans = 0;

        for(int i = 0 , j = 0 ; i < n ; i++) {
            mp[nums[i]]++;
            if(mp[nums[i]] >= 2) k -= (mp[nums[i]] - 1);

            while(k <= 0){ 
                ans += (n - i );
                if(mp[nums[j]] >= 2)
                k += (mp[nums[j]] - 1);
                mp[nums[j]]--;
                j++;
            }
        }
        return ans;
    }
};